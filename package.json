{
	"activationEvents": [
		"onFileSystem:azureAppService"
	],
	"aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
	"contributes": {
		"commands": [
			{
				"category": "Azure App Service",
				"command": "appService.AddAzureDatabasesConnection",
				"title": "%appService.AddAzureDatabasesConnection%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.appSettings.Add",
				"title": "%appService.appSettings.Add%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.appSettings.Delete",
				"title": "%appService.appSettings.Delete%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.appSettings.Download",
				"title": "%appService.appSettings.Download%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.appSettings.Edit",
				"title": "%appService.appSettings.Edit%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.appSettings.Rename",
				"title": "%appService.appSettings.Rename%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.appSettings.ToggleSlotSetting",
				"title": "%appService.appSettings.ToggleSlotSetting%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.appSettings.Upload",
				"title": "%appService.appSettings.Upload%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.Browse",
				"title": "%appService.Browse%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.ConfigureDeploymentSource",
				"title": "%appService.ConfigureDeploymentSource%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.connectToGitHub",
				"title": "%appService.connectToGitHub%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.CreateSlot",
				"title": "%appService.CreateSlot%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.CreateWebApp",
				"icon": "$(add)",
				"title": "%appService.CreateWebApp%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.CreateWebAppAdvanced",
				"title": "%appService.CreateWebAppAdvanced%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.Delete",
				"title": "%appService.Delete%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.Deploy",
				"icon": "$(cloud-upload)",
				"title": "%appService.Deploy%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.DeploymentScript",
				"title": "%appService.DeploymentScript%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.DeploySlot",
				"title": "%appService.DeploySlot%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.DisconnectRepo",
				"title": "%appService.DisconnectRepo%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.EnableFileLogging",
				"title": "%appService.EnableFileLogging%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.InstallCosmosDBExtension",
				"title": "%appService.InstallCosmosDBExtension%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.OpenInPortal",
				"title": "%appService.OpenInPortal%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.Redeploy",
				"title": "%appService.Redeploy%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.Refresh",
				"icon": "$(refresh)",
				"title": "%appService.Refresh%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.RemoveCosmosDBConnection",
				"title": "%appService.RemoveCosmosDBConnection%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.ReportIssue",
				"title": "%appService.ReportIssue%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.Restart",
				"title": "%appService.Restart%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.RevealConnection",
				"title": "%appService.RevealConnection%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.RevealConnectionInAppSettings",
				"title": "%appService.RevealConnectionInAppSettings%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.ScaleUp",
				"title": "%appService.ScaleUp%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.Start",
				"title": "%appService.Start%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.StartRemoteDebug",
				"title": "%appService.StartRemoteDebug%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.StartSsh",
				"title": "%appService.StartSsh%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.startStreamingLogs",
				"title": "%appService.startStreamingLogs%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.Stop",
				"title": "%appService.Stop%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.StopLogStream",
				"title": "%appService.StopLogStream%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.SwapSlots",
				"title": "%appService.SwapSlots%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.toggleAppSettingVisibility",
				"icon": "$(eye)",
				"title": "%appService.toggleAppSettingVisibility%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.ViewCommitInGitHub",
				"title": "%appService.ViewCommitInGitHub%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.viewDeploymentLogs",
				"title": "%appService.viewDeploymentLogs%"
			},
			{
				"category": "Azure App Service",
				"command": "appService.ViewProperties",
				"title": "%appService.ViewProperties%"
			}
		],
		"configuration": {
			"properties": {
				"appService.connections": {
					"description": "%appService.connections%",
					"items": {
						"additionalProperties": false,
						"description": "%appService.connections.connection%",
						"properties": {
							"cosmosDB": {
								"description": "%appService.connections.dbArray%",
								"items": {
									"description": "%appService.connections.connId%",
									"type": "string"
								},
								"type": "array"
							},
							"webAppId": {
								"description": "%appService.connections.appId%",
								"type": "string"
							}
						},
						"type": "object"
					},
					"required": [
						"webAppId"
					],
					"type": "array"
				},
				"appService.defaultWebAppToDeploy": {
					"description": "%appService.defaultWebAppToDeploy%",
					"scope": "resource",
					"type": "string"
				},
				"appService.deploySubpath": {
					"description": "%appService.deploySubpath%",
					"scope": "resource",
					"type": "string"
				},
				"appService.enableOutputTimestamps": {
					"default": true,
					"description": "%appService.enableOutputTimestamps%",
					"type": "boolean"
				},
				"appService.enablePythonRemoteDebugging": {
					"default": false,
					"description": "%appService.enablePythonRemoteDebugging%",
					"type": "boolean"
				},
				"appService.postDeployTask": {
					"description": "%appService.postDeployTask%",
					"scope": "resource",
					"type": "string"
				},
				"appService.preDeployTask": {
					"description": "%appService.preDeployTask%",
					"scope": "resource",
					"type": "string"
				},
				"appService.showBuildDuringDeployPrompt": {
					"default": true,
					"description": "%appService.showBuildDuringDeployPrompt%",
					"scope": "resource",
					"type": "boolean"
				},
				"appService.showDeployConfirmation": {
					"default": true,
					"description": "%appService.showDeployConfirmation%",
					"type": "boolean"
				},
				"appService.showDeploySubpathWarning": {
					"default": true,
					"description": "%appService.showDeploySubpathWarning%",
					"type": "boolean"
				},
				"appService.showExplorer": {
					"default": true,
					"description": "%appService.showExplorer%",
					"type": "boolean"
				},
				"appService.showHiddenStacks": {
					"default": false,
					"description": "%appService.showHiddenStacks%",
					"type": "boolean"
				},
				"appService.showPlanPerformanceWarning": {
					"default": true,
					"description": "%appService.showPlanPerformanceWarning%",
					"type": "boolean"
				},
				"appService.showPreDeployWarning": {
					"default": true,
					"description": "%appService.showPreDeployWarning%",
					"scope": "resource",
					"type": "boolean"
				},
				"appService.showSavePrompt": {
					"default": true,
					"description": "%appService.showSavePrompt%",
					"type": "boolean"
				},
				"appService.zipGlobPattern": {
					"default": "**/*",
					"description": "%appService.zipGlobPattern%",
					"scope": "resource",
					"type": "string"
				},
				"appService.zipIgnorePattern": {
					"default": [],
					"description": "%appService.zipIgnorePattern%",
					"scope": "resource",
					"type": [
						"string",
						"array"
					]
				}
			},
			"title": "Azure App Service"
		},
		"menus": {
			"appService.submenus.workspaceActions": [
				{
					"command": "appService.Deploy",
					"group": "1_deploy@1"
				},
				{
					"command": "appService.CreateWebApp",
					"group": "2_create@1"
				},
				{
					"command": "appService.CreateWebAppAdvanced",
					"group": "2_create@2"
				}
			],
			"commandPalette": [
				{
					"command": "appService.appSettings.Delete",
					"when": "never"
				},
				{
					"command": "appService.InstallCosmosDBExtension",
					"when": "never"
				},
				{
					"command": "appService.OpenInPortal",
					"when": "never"
				},
				{
					"command": "appService.Refresh",
					"when": "never"
				},
				{
					"command": "appService.ScaleUp",
					"when": "never"
				},
				{
					"command": "appService.toggleAppSettingVisibility",
					"when": "never"
				},
				{
					"command": "appService.ViewProperties",
					"when": "never"
				}
			],
			"explorer/context": [
				{
					"command": "appService.appSettings.Upload",
					"group": "zzz_azuretools_appsettings@1",
					"when": "resourceFilename == .env"
				},
				{
					"command": "appService.Deploy",
					"group": "zzz_azuretools_deploy@1",
					"when": "explorerResourceIsFolder == true"
				},
				{
					"command": "appService.Deploy",
					"group": "zzz_azuretools_deploy@1",
					"when": "resourceExtname == .zip"
				},
				{
					"command": "appService.Deploy",
					"group": "zzz_azuretools_deploy@1",
					"when": "explorerResourceIsFolder == false && resourceExtname =~ /.[j|w]ar$/"
				}
			],
			"view/item/context": [
				{
					"command": "appService.CreateWebApp",
					"group": "1_subscriptionGeneralCommands@1",
					"when": "view == azureResourceGroups && viewItem =~ /appservices/i && viewItem =~ /azureResourceTypeGroup/i"
				},
				{
					"command": "appService.CreateWebAppAdvanced",
					"group": "1_subscriptionGeneralCommands@2",
					"when": "view == azureResourceGroups && viewItem =~ /appservices/i && viewItem =~ /azureResourceTypeGroup/i"
				},
				{
					"command": "appService.OpenInPortal",
					"group": "1_appServiceGeneralCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppSlot)/"
				},
				{
					"command": "appService.Browse",
					"group": "1_appServiceGeneralCommands@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.Deploy",
					"group": "2_appServiceDeployCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azAppWebApp/"
				},
				{
					"command": "appService.DeploySlot",
					"group": "2_appServiceDeployCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azAppSlot/"
				},
				{
					"command": "appService.ConfigureDeploymentSource",
					"group": "2_appServiceDeployCommands@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.Start",
					"group": "3_appServiceControlCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.Stop",
					"group": "3_appServiceControlCommands@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.Restart",
					"group": "3_appServiceControlCommands@3",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.SwapSlots",
					"group": "3_appServiceControlCommands@4",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == azAppSlot"
				},
				{
					"command": "appService.Delete",
					"group": "3_appServiceControlCommands@5",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.startStreamingLogs",
					"group": "4_appServiceDiagnosticsCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.StopLogStream",
					"group": "4_appServiceDiagnosticsCommands@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.DeploymentScript",
					"group": "5_appServiceMiscCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azAppWebApp/"
				},
				{
					"command": "appService.ViewProperties",
					"group": "7_commonCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azAppSlot/"
				},
				{
					"command": "appService.Refresh",
					"group": "7_commonCommands@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppSlot)/"
				},
				{
					"command": "appService.StartRemoteDebug",
					"group": "5_appServiceRemoteCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.StartSsh",
					"group": "5_appServiceRemoteCommands@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /(azAppWebApp|azAppSlot)/"
				},
				{
					"command": "appService.CreateSlot",
					"group": "1_deploymentSlotsGeneralCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == deploymentSlots"
				},
				{
					"command": "appService.OpenInPortal",
					"group": "1_deploymentSlotsGeneralCommands@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == deploymentSlots"
				},
				{
					"command": "appService.Refresh",
					"group": "2_deploymentSlotsGeneralCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == deploymentSlots"
				},
				{
					"command": "appService.EnableFileLogging",
					"group": "1_folderGeneralCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*logFiles/"
				},
				{
					"command": "appService.Refresh",
					"group": "1_folderGeneralCommands@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*siteFiles/"
				},
				{
					"command": "appService.Refresh",
					"group": "1_subFolderRefreshCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*folder/"
				},
				{
					"command": "appService.Refresh",
					"group": "2_folderGeneralCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*logFiles/"
				},
				{
					"command": "appService.OpenInPortal",
					"group": "1_webJobsGeneralCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == webJobs"
				},
				{
					"command": "appService.Refresh",
					"group": "2_webJobsGeneralCommands@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == webJobs"
				},
				{
					"command": "appService.appSettings.Add",
					"group": "1_appSettingEnv@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*applicationSettings/"
				},
				{
					"command": "appService.Refresh",
					"group": "2_appSettingsGeneral@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*applicationSettings/"
				},
				{
					"command": "appService.appSettings.Download",
					"group": "1_appSettingEnv@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*applicationSettings/"
				},
				{
					"command": "appService.appSettings.Upload",
					"group": "1_appSettingEnv@3",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*applicationSettings/"
				},
				{
					"command": "appService.appSettings.Edit",
					"group": "1_appSettingItemEdit@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*applicationSettingItem(|NoSlots)/"
				},
				{
					"command": "appService.appSettings.Rename",
					"group": "1_appSettingItemEdit@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*applicationSettingItem(|NoSlots)/"
				},
				{
					"command": "appService.appSettings.Delete",
					"group": "1_appSettingItemEdit@3",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*applicationSettingItem(|NoSlots)/"
				},
				{
					"command": "appService.appSettings.ToggleSlotSetting",
					"group": "1_appSettingItemEdit@4",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*applicationSettingItem/"
				},
				{
					"command": "appService.toggleAppSettingVisibility",
					"group": "inline",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*applicationSettingItem(|NoSlots)/"
				},
				{
					"command": "appService.ScaleUp",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == deploymentNASlots"
				},
				{
					"command": "appService.Refresh",
					"group": "1@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == connections"
				},
				{
					"command": "appService.AddAzureDatabasesConnection",
					"group": "1@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == сosmosDBConnections"
				},
				{
					"command": "appService.Refresh",
					"group": "2@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == сosmosDBConnections"
				},
				{
					"command": "appService.RevealConnection",
					"group": "1@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == cosmosDBConnection"
				},
				{
					"command": "appService.RevealConnectionInAppSettings",
					"group": "1@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == cosmosDBConnection"
				},
				{
					"command": "appService.RemoveCosmosDBConnection",
					"group": "2@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == cosmosDBConnection"
				},
				{
					"command": "appService.OpenInPortal",
					"group": "1@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*(deployments(C|Unc)onnected)/"
				},
				{
					"command": "appService.ConfigureDeploymentSource",
					"group": "1@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*(deployments(C|Unc)onnected)/"
				},
				{
					"command": "appService.DisconnectRepo",
					"group": "1@3",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*deploymentsConnected/"
				},
				{
					"command": "appService.Refresh",
					"group": "2@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*deployments(C|Unc)onnected/"
				},
				{
					"command": "appService.viewDeploymentLogs",
					"group": "1@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*deployment\\//"
				},
				{
					"command": "appService.Redeploy",
					"group": "1@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*deployment\\//"
				},
				{
					"command": "appService.ViewCommitInGitHub",
					"group": "1@3",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*deployment\\/github/"
				},
				{
					"command": "appService.OpenInPortal",
					"group": "1@4",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /appService.*deployment\\//"
				}
			],
			"view/title": [
				{
					"group": "navigation@2",
					"submenu": "appService.submenus.workspaceActions",
					"when": "view == azureWorkspace"
				}
			]
		},
		"submenus": [
			{
				"icon": {
					"dark": "resources/WebApp.svg",
					"light": "resources/WebApp.svg"
				},
				"id": "appService.submenus.workspaceActions",
				"label": "Azure App Service"
			}
		],
		"x-azResources": {
			"activation": {
				"onResolve": [
					"microsoft.web/sites"
				]
			},
			"azure": {
				"branches": [
					{
						"type": "AppServices"
					}
				]
			},
			"commands": [
				{
					"command": "appService.CreateWebApp",
					"detail": "%appService.createWebAppDetail%",
					"title": "%appService.createWebAppTitle%",
					"type": "AppServices"
				}
			]
		}
	},
	"dependencies": {
		"dotenv": "^6.2.0",
		"fast-xml-parser": "^4.4.1",
		"fs-extra": "^8.0.0",
		"open": "^8.0.4"
	},
	"description": "%appService.description%",
	"devDependencies": {
		"@types/dotenv": "^6.1.1",
		"@types/fs-extra": "^8.0.0",
		"@types/node": "^16.18.36",
		"glob": "^7.1.6"
	},
	"displayName": "Azure App Service",
	"enabledApiProposals": [
		"terminalDataWriteEvent"
	],
	"extensionDependencies": [
		"ms-azuretools.vscode-azureresourcegroups"
	],
	"galleryBanner": {
		"color": "#3a3d41",
		"theme": "dark"
	},
	"icon": "resources/WebApp.png",
	"main": "./main.js",
	"name": "vscode-azureappservice",
	"preview": true,
	"scripts": {
		"all": "npm i && npm run lint && npm test",
		"build": "tsc",
		"cleanReadme": "gulp cleanReadme",
		"compile": "tsc -watch",
		"prepare": "husky install",
		"webpack": "npm run build && gulp webpack-dev",
		"webpack-prod": "npm run build && gulp webpack-prod",
		"webpack-profile": "webpack --profile --json --mode production > webpack-stats.json && echo Use http://webpack.github.io/analyse to analyze the stats"
	}
}
